import numpy as np
import pandas as pd

from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

column_names = ['Sex', 'Length', 'Diameter', 'Height', 'WholeWeight', 
                'ShuckedWeight', 'VisceraWeight', 'ShellWeight', 'Rings']
df = pd.read_csv("/content/abalone.data", names=column_names)

df.sample(5)

/**************** RUN ***********************/

df.info()

/**************** RUN ***********************/

df.isnull().sum()

/**************** RUN ***********************/

df.describe()

/**************** RUN ***********************/

df['AgeClass'] = pd.cut(df['Rings'], bins=[0, 8, 10, 30], labels=['Young', 'Medium', 'Old'])

label_encoder = LabelEncoder()
df['Sex'] = label_encoder.fit_transform(df['Sex'])
df['AgeClass'] = label_encoder.fit_transform(df['AgeClass'])

df.sample(10)

/**************** RUN ***********************/

X = df.drop(['Rings','AgeClass'], axis=1)
y = df['AgeClass']

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

model = LogisticRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
print("\nClassification Report:\n", classification_report(y_test, y_pred))